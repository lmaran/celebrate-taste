"use strict";var app=angular.module("my-app",["ngCookies","ngResource","ngSanitize","ngRoute","ui.bootstrap"]);app.config(["$routeProvider","$locationProvider","$httpProvider",function(t,e,o){t.otherwise({redirectTo:"/"}),e.html5Mode(!0),o.interceptors.push("authInterceptor")}]),app.factory("authInterceptor",["$rootScope","$q","$cookieStore","$location",function(t,e,o,n){return{request:function(t){return t.headers=t.headers||{},o.get("token")&&(t.headers.Authorization="Bearer "+o.get("token")),t},responseError:function(t){return 401===t.status?(n.path("/login"),o.remove("token"),e.reject(t)):e.reject(t)}}}]),app.run(["$rootScope","$location","Auth",function(t,e,o){t.$on("$routeChangeStart",function(t,n){o.isLoggedInAsync(function(o){n.authenticate&&!o&&(t.preventDefault(),e.path("/login"))})})}]),app.config(["$routeProvider",function(t){t.when("/login",{controller:"loginController",templateUrl:"app/account/login/login.html"}).when("/signup",{controller:"signupController",templateUrl:"app/account/signup/signup.html"}).when("/settings",{controller:"settingsController",templateUrl:"app/account/settings/settings.html",authenticate:!0})}]),app.controller("adminController",["$scope","$http","Auth","User",function(t,e,o,n){t.users=n.query(),t["delete"]=function(e){n.remove({id:e._id}),angular.forEach(t.users,function(o,n){o===e&&t.users.splice(n,1)})}}]),app.config(["$routeProvider",function(t){t.when("/admin",{controller:"adminController",templateUrl:"app/admin/admin.html"})}]),app.factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(t,e,o,n,r,i){var c={};return r.get("token")&&(c=n.get()),{login:function(t,e){var a=e||angular.noop,s=i.defer();return o.post("/auth/local",{email:t.email,password:t.password}).success(function(t){return r.put("token",t.token),c=n.get(),s.resolve(t),a()}).error(function(t){return this.logout(),s.reject(t),a(t)}.bind(this)),s.promise},logout:function(){r.remove("token"),c={}},createUser:function(t,e){var o=e||angular.noop;return n.save(t,function(e){return r.put("token",e.token),c=n.get(),o(t)},function(t){return this.logout(),o(t)}.bind(this)).$promise},changePassword:function(t,e,o){var r=o||angular.noop;return n.changePassword({id:c._id},{oldPassword:t,newPassword:e},function(t){return r(t)},function(t){return r(t)}).$promise},getCurrentUser:function(){return c},isLoggedIn:function(){return c.hasOwnProperty("role")},isLoggedInAsync:function(t){c.hasOwnProperty("$promise")?c.$promise.then(function(){t(!0)})["catch"](function(){t(!1)}):t(c.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===c.role},getToken:function(){return r.get("token")}}}]),app.factory("User",["$resource",function(t){return t("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),app.controller("contactController",["$scope",function(t){}]),app.config(["$routeProvider",function(t){t.when("/contact",{controller:"contactController",templateUrl:"app/contact/contact.html"})}]),app.directive("googleMap",["$rootScope","loadGoogleMapAPI",function(t,e){return{restrict:"C",scope:{mapId:"@id",lat:"@","long":"@",title:"@"},link:function(t,o,n){angular.isDefined(t.lat)&&angular.isDefined(t["long"])&&(t.initialize=function(){t.location=new google.maps.LatLng(t.lat,t["long"]),t.mapOptions={zoom:16,center:t.location},t.map=new google.maps.Map(document.getElementById(t.mapId),t.mapOptions);new google.maps.Marker({position:t.location,map:t.map,title:t.title})},e.then(function(){t.initialize()},function(){}))}}}]),app.service("loadGoogleMapAPI",["$window","$q",function(t,e){function o(){var t=document.createElement("script");t.src="//maps.googleapis.com/maps/api/js?sensor=false&language=en&callback=initMap",document.body.appendChild(t)}var n=e.defer();return t.initMap=function(){n.resolve()},o(),n.promise}]),app.controller("customerController",["$scope","$window","$route","customerService","$location",function(t,e,o,n,r){function i(){c()}function c(){n.getById(o.current.params.id).then(function(e){t.customer=e})["catch"](function(t){alert(JSON.stringify(t,null,4))})}t.isEditMode=o.current.isEditMode,t.isFocusOnName=t.isEditMode?!1:!0,t.customer={},t.isEditMode&&i(),t.create=function(e){t.submitted=!0,e.$valid&&n.create(t.customer).then(function(t){r.path("/customers")})["catch"](function(t){alert(JSON.stringify(t.data,null,4))})},t.update=function(e){t.submitted=!0,e.$valid&&n.update(t.customer).then(function(t){r.path("/customers")})["catch"](function(t){alert(JSON.stringify(t.data,null,4))})},t.cancel=function(){e.history.back()}}]),app.config(["$routeProvider",function(t){t.when("/customers",{controller:"customersController",templateUrl:"app/customer/customers.html",title:"Customers"}).when("/customers/create",{controller:"customerController",templateUrl:"app/customer/customer.html",title:"Create Customer"}).when("/customers/:id",{controller:"customerController",templateUrl:"app/customer/customer.html",title:"Edit Customer",isEditMode:!0})}]),app.factory("customerService",["$http",function(t){var e={},o="/api/customers/";return e.create=function(e){return t.post(o,e)},e.getAll=function(){return t.get(o).then(function(t){return t.data})},e.getById=function(e){return t.get(o+encodeURIComponent(e)).then(function(t){return t.data})},e.update=function(e){return t.put(o,e)},e["delete"]=function(e){return t["delete"](o+encodeURIComponent(e))},e}]),app.controller("customersController",["$scope","$location","customerService",function(t,e,o){function n(){o.getAll().then(function(e){t.customers=e})["catch"](function(t){alert(JSON.stringify(t,null,4))})}t.customers=[],t.errors={},n(),t["delete"]=function(e){for(var n in t.customers)if(t.customers[n]._id===e._id)break;o["delete"](e._id).then(function(){t.customers.splice(n,1)})["catch"](function(e){t.errors=JSON.stringify(e.data,null,4),alert(t.errors)})},t.create=function(){e.path("/customers/create")},t.refresh=function(){n()}}]),app.controller("homeController",["$scope",function(t){}]),app.config(["$routeProvider",function(t){t.when("/",{controller:"homeController",templateUrl:"app/home/home.html"})}]),app.controller("navbarController",["$scope","$location","Auth",function(t,e,o){t.menu=[{title:"Page 1",link:"/page1"},{title:"Customers",link:"/customers"},{title:"Contact",link:"/contact"}],t.isCollapsed=!0,t.isLoggedIn=o.isLoggedIn,t.isAdmin=o.isAdmin,t.getCurrentUser=o.getCurrentUser,t.logout=function(){o.logout(),e.path("/login")},t.isActive=function(t){return t===e.path()}}]),app.controller("page1Controller",["$scope",function(t){}]),app.config(["$routeProvider",function(t){t.when("/page1",{controller:"page1Controller",templateUrl:"app/page1/page1.html"})}]),app.controller("loginController",["$scope","Auth","$location","$window",function(t,e,o,n){t.user={},t.errors={},t.login=function(n){t.submitted=!0,n.$valid&&e.login({email:t.user.email,password:t.user.password}).then(function(){o.path("/")})["catch"](function(e){t.errors.other=e.message})},t.loginOauth=function(t){n.location.href="/auth/"+t}}]),app.controller("settingsController",["$scope","User","Auth",function(t,e,o){t.errors={},t.changePassword=function(e){t.submitted=!0,e.$valid&&o.changePassword(t.user.oldPassword,t.user.newPassword).then(function(){t.message="Password successfully changed."})["catch"](function(){e.password.$setValidity("mongoose",!1),t.errors.other="Incorrect password",t.message=""})}}]),app.controller("signupController",["$scope","Auth","$location","$window",function(t,e,o,n){t.user={},t.errors={},t.register=function(n){t.submitted=!0,n.$valid&&e.createUser({name:t.user.name,email:t.user.email,password:t.user.password}).then(function(){o.path("/")})["catch"](function(e){e=e.data,t.errors={},angular.forEach(e.errors,function(e,o){n[o].$setValidity("mongoose",!1),t.errors[o]=e.message})})},t.loginOauth=function(t){n.location.href="/auth/"+t}}]);