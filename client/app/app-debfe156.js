"use strict";var app=angular.module("my-app",["ngCookies","ngResource","ngSanitize","ngRoute","ui.bootstrap"]);app.config(["$routeProvider","$locationProvider","$httpProvider",function(o,e,n){o.otherwise({redirectTo:"/"}),e.html5Mode(!0),n.interceptors.push("authInterceptor")}]),app.factory("authInterceptor",function(o,e,n,t){return{request:function(o){return o.headers=o.headers||{},n.get("token")&&(o.headers.Authorization="Bearer "+n.get("token")),o},responseError:function(o){return 401===o.status?(t.path("/login"),n.remove("token"),e.reject(o)):e.reject(o)}}}),app.run(function(o,e,n){o.$on("$routeChangeStart",function(o,t){n.isLoggedInAsync(function(n){t.authenticate&&!n&&(o.preventDefault(),e.path("/login"))})})}),app.config(["$routeProvider",function(o){o.when("/login",{controller:"loginController",templateUrl:"app/account/login/login.html"}).when("/signup",{controller:"signupController",templateUrl:"app/account/signup/signup.html"}).when("/settings",{controller:"settingsController",templateUrl:"app/account/settings/settings.html",authenticate:!0})}]),app.controller("adminController",["$scope","$http","Auth","User",function(o,e,n,t){o.users=t.query(),o["delete"]=function(e){t.remove({id:e._id}),angular.forEach(o.users,function(n,t){n===e&&o.users.splice(t,1)})}}]),app.config(function(o){o.when("/admin",{controller:"adminController",templateUrl:"app/admin/admin.html"})}),app.factory("Auth",["$location","$rootScope","$http","User","$cookieStore","$q",function(o,e,n,t,r,a){var i={};return r.get("token")&&(i=t.get()),{login:function(o,e){var s=e||angular.noop,c=a.defer();return n.post("/auth/local",{email:o.email,password:o.password}).success(function(o){return r.put("token",o.token),i=t.get(),c.resolve(o),s()}).error(function(o){return this.logout(),c.reject(o),s(o)}.bind(this)),c.promise},logout:function(){r.remove("token"),i={}},createUser:function(o,e){var n=e||angular.noop;return t.save(o,function(e){return r.put("token",e.token),i=t.get(),n(o)},function(o){return this.logout(),n(o)}.bind(this)).$promise},changePassword:function(o,e,n){var r=n||angular.noop;return t.changePassword({id:i._id},{oldPassword:o,newPassword:e},function(o){return r(o)},function(o){return r(o)}).$promise},getCurrentUser:function(){return i},isLoggedIn:function(){return i.hasOwnProperty("role")},isLoggedInAsync:function(o){i.hasOwnProperty("$promise")?i.$promise.then(function(){o(!0)})["catch"](function(){o(!1)}):o(i.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===i.role},getToken:function(){return r.get("token")}}}]),app.factory("User",["$resource",function(o){return o("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),app.controller("contactController",["$scope",function(o){}]),app.config(function(o){o.when("/contact",{controller:"contactController",templateUrl:"app/contact/contact.html"})}),app.directive("googleMap",["$rootScope","loadGoogleMapAPI",function(o,e){return{restrict:"C",scope:{mapId:"@id",lat:"@","long":"@",title:"@"},link:function(o,n,t){angular.isDefined(o.lat)&&angular.isDefined(o["long"])&&(o.initialize=function(){o.location=new google.maps.LatLng(o.lat,o["long"]),o.mapOptions={zoom:16,center:o.location},o.map=new google.maps.Map(document.getElementById(o.mapId),o.mapOptions);new google.maps.Marker({position:o.location,map:o.map,title:o.title})},e.then(function(){o.initialize()},function(){}))}}}]),app.service("loadGoogleMapAPI",["$window","$q",function(o,e){function n(){var o=document.createElement("script");o.src="//maps.googleapis.com/maps/api/js?sensor=false&language=en&callback=initMap",document.body.appendChild(o)}var t=e.defer();return o.initMap=function(){t.resolve()},n(),t.promise}]),app.controller("homeController",["$scope",function(o){}]),app.config(function(o){o.when("/",{controller:"homeController",templateUrl:"app/home/home.html"})}),app.controller("navbarController",["$scope","$location","Auth",function(o,e,n){o.menu=[{title:"Page 1",link:"/page1"},{title:"Contact",link:"/contact"}],o.isCollapsed=!0,o.isLoggedIn=n.isLoggedIn,o.isAdmin=n.isAdmin,o.getCurrentUser=n.getCurrentUser,o.logout=function(){n.logout(),e.path("/login")},o.isActive=function(o){return o===e.path()}}]),app.controller("page1Controller",["$scope",function(o){}]),app.config(function(o){o.when("/page1",{controller:"page1Controller",templateUrl:"app/page1/page1.html"})}),app.controller("loginController",["$scope","Auth","$location","$window",function(o,e,n,t){o.user={},o.errors={},o.login=function(t){o.submitted=!0,t.$valid&&e.login({email:o.user.email,password:o.user.password}).then(function(){n.path("/")})["catch"](function(e){o.errors.other=e.message})},o.loginOauth=function(o){t.location.href="/auth/"+o}}]),app.controller("settingsController",["$scope","User","Auth",function(o,e,n){o.errors={},o.changePassword=function(e){o.submitted=!0,e.$valid&&n.changePassword(o.user.oldPassword,o.user.newPassword).then(function(){o.message="Password successfully changed."})["catch"](function(){e.password.$setValidity("mongoose",!1),o.errors.other="Incorrect password",o.message=""})}}]),app.controller("signupController",["$scope","Auth","$location","$window",function(o,e,n,t){o.user={},o.errors={},o.register=function(t){o.submitted=!0,t.$valid&&e.createUser({name:o.user.name,email:o.user.email,password:o.user.password}).then(function(){n.path("/")})["catch"](function(e){e=e.data,o.errors={},angular.forEach(e.errors,function(e,n){t[n].$setValidity("mongoose",!1),o.errors[n]=e.message})})},o.loginOauth=function(o){t.location.href="/auth/"+o}}]);