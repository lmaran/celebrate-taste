"use strict";var app=angular.module("celebrate-taste",["ngResource","ngSanitize","ngRoute","ui.bootstrap"]);app.config(["$routeProvider","$locationProvider","$httpProvider",function(t,e,n){t.otherwise({redirectTo:"/"}),e.html5Mode(!0),n.interceptors.push("authInterceptor")}]),app.run(["$rootScope","$location","Auth",function(t,e,n){t.$on("$routeChangeStart",function(t,o){n.isLoggedInAsync(function(n){o.authenticate&&!n&&(t.preventDefault(),e.path("/login"))})}),t.$on("$routeChangeSuccess",function(e,n,o){n.hasOwnProperty("$$route")&&(t.pageTitle=n.$$route.title)})}]),app.config(["$routeProvider",function(t){t.when("/login",{controller:"loginController",templateUrl:"app/account/login/login.html"}).when("/signup",{controller:"signupController",templateUrl:"app/account/signup/signup.html"}).when("/settings",{controller:"settingsController",templateUrl:"app/account/settings/settings.html",authenticate:!0})}]),app.controller("adminController",["$scope","$http","Auth","User",function(t,e,n,o){t.users=o.query(),t["delete"]=function(e){o.remove({id:e._id}),angular.forEach(t.users,function(n,o){n===e&&t.users.splice(o,1)})}}]),app.config(["$routeProvider",function(t){t.when("/admin",{controller:"adminController",templateUrl:"app/admin/admin.html"})}]),app.factory("authInterceptor",["$rootScope","$q","$location","$rootElement","$window",function(t,e,n,o,r){var i=o.attr("ng-app"),a=i+"_token";return{request:function(t){t.headers=t.headers||{};var e=r.localStorage.getItem(a);return e&&(t.headers.Authorization="Bearer "+e),t},responseError:function(t){return 401===t.status?(n.path("/login"),r.localStorage.removeItem(a),e.reject(t)):e.reject(t)}}}]),app.factory("Auth",["$location","$rootScope","$http","User","$q","$rootElement","$window",function(t,e,n,o,r,i,a){var c=i.attr("ng-app"),l=c+"_token",s={};return a.localStorage.getItem(l)&&(s=o.get()),{login:function(t,e){var i=e||angular.noop,c=r.defer();return n.post("/auth/local",{email:t.email,password:t.password}).success(function(t){return a.localStorage.setItem(l,t.token),s=o.get(),c.resolve(t),i()}).error(function(t){return this.logout(),c.reject(t),i(t)}.bind(this)),c.promise},logout:function(){a.localStorage.removeItem(l),s={}},createUser:function(t,e){var n=e||angular.noop;return o.save(t,function(e){return a.localStorage.setItem(l,e.token),s=o.get(),n(t)},function(t){return this.logout(),n(t)}.bind(this)).$promise},changePassword:function(t,e,n){var r=n||angular.noop;return o.changePassword({id:s._id},{oldPassword:t,newPassword:e},function(t){return r(t)},function(t){return r(t)}).$promise},getCurrentUser:function(){return s},isLoggedIn:function(){return s.hasOwnProperty("role")},isLoggedInAsync:function(t){s.hasOwnProperty("$promise")?s.$promise.then(function(){t(!0)})["catch"](function(){t(!1)}):t(s.hasOwnProperty("role")?!0:!1)},isAdmin:function(){return"admin"===s.role},getToken:function(){return a.localStorage.getItem(l)}}}]),app.factory("User",["$resource",function(t){return t("/api/users/:id/:controller",{id:"@_id"},{changePassword:{method:"PUT",params:{controller:"password"}},get:{method:"GET",params:{id:"me"}}})}]),app.controller("contactController",["$scope",function(t){}]),app.config(["$routeProvider",function(t){t.when("/contact",{controller:"contactController",templateUrl:"app/contact/contact.html"})}]),app.directive("googleMap",["$rootScope","loadGoogleMapAPI",function(t,e){return{restrict:"C",scope:{mapId:"@id",lat:"@","long":"@",title:"@"},link:function(t,n,o){angular.isDefined(t.lat)&&angular.isDefined(t["long"])&&(t.initialize=function(){t.location=new google.maps.LatLng(t.lat,t["long"]),t.mapOptions={zoom:16,center:t.location},t.map=new google.maps.Map(document.getElementById(t.mapId),t.mapOptions);new google.maps.Marker({position:t.location,map:t.map,title:t.title})},e.then(function(){t.initialize()},function(){}))}}}]),app.service("loadGoogleMapAPI",["$window","$q",function(t,e){function n(){var t=document.createElement("script");t.src="//maps.googleapis.com/maps/api/js?sensor=false&language=en&callback=initMap",document.body.appendChild(t)}var o=e.defer();return t.initMap=function(){o.resolve()},n(),o.promise}]),app.controller("customerController",["$scope","$window","$route","customerService","$location",function(t,e,n,o,r){function i(){a()}function a(){o.getById(n.current.params.id).then(function(e){t.customer=e})["catch"](function(t){alert(JSON.stringify(t,null,4))})}t.isEditMode=n.current.isEditMode,t.isFocusOnName=t.isEditMode?!1:!0,t.customer={},t.isEditMode&&i(),t.create=function(e){t.submitted=!0,e.$valid&&o.create(t.customer).then(function(t){r.path("/customers")})["catch"](function(t){alert(JSON.stringify(t.data,null,4))})},t.update=function(e){t.submitted=!0,e.$valid&&o.update(t.customer).then(function(t){r.path("/customers")})["catch"](function(t){alert(JSON.stringify(t.data,null,4))})},t.cancel=function(){e.history.back()}}]),app.config(["$routeProvider",function(t){t.when("/customers",{controller:"customersController",templateUrl:"app/customer/customers.html",title:"Customers"}).when("/customers/create",{controller:"customerController",templateUrl:"app/customer/customer.html",title:"Create Customer"}).when("/customers/:id",{controller:"customerController",templateUrl:"app/customer/customer.html",title:"Edit Customer",isEditMode:!0})}]),app.factory("customerService",["$http",function(t){var e={},n="/api/customers/";return e.create=function(e){return t.post(n,e)},e.getAll=function(){return t.get(n).then(function(t){return t.data})},e.getById=function(e){return t.get(n+encodeURIComponent(e)).then(function(t){return t.data})},e.update=function(e){return t.put(n,e)},e["delete"]=function(e){return t["delete"](n+encodeURIComponent(e))},e}]),app.controller("customersController",["$scope","$location","customerService",function(t,e,n){function o(){n.getAll().then(function(e){t.customers=e})["catch"](function(t){alert(JSON.stringify(t,null,4))})}t.customers=[],t.errors={},o(),t["delete"]=function(e){for(var o in t.customers)if(t.customers[o]._id===e._id)break;n["delete"](e._id).then(function(){t.customers.splice(o,1)})["catch"](function(e){t.errors=JSON.stringify(e.data,null,4),alert(t.errors)})},t.create=function(){e.path("/customers/create")},t.refresh=function(){o()}}]),app.controller("dishController",["$scope","$window","$route","dishService","$location",function(t,e,n,o,r){function i(){a()}function a(){o.getById(n.current.params.id).then(function(e){t.dish=e})["catch"](function(t){alert(JSON.stringify(t,null,4))})}t.isEditMode=n.current.isEditMode,t.isFocusOnName=t.isEditMode?!1:!0,t.dish={},t.isEditMode&&i(),t.create=function(e){t.submitted=!0,e.$valid&&o.create(t.dish).then(function(t){r.path("/dishes")})["catch"](function(t){alert(JSON.stringify(t.data,null,4))})},t.update=function(e){t.submitted=!0,e.$valid&&o.update(t.dish).then(function(t){r.path("/dishes")})["catch"](function(t){alert(JSON.stringify(t.data,null,4))})},t.cancel=function(){e.history.back()}}]),app.config(["$routeProvider",function(t){t.when("/dishes",{controller:"dishesController",templateUrl:"app/dish/dishes.html",title:"Feluri de mancare"}).when("/dishes/create",{controller:"dishController",templateUrl:"app/dish/dish.html",title:"Adauga un fel de mancare"}).when("/dishes/:id",{controller:"dishController",templateUrl:"app/dish/dish.html",title:"Editeaza felul de mancare",isEditMode:!0})}]),app.factory("dishService",["$http",function(t){var e={},n="/api/dishes/";return e.create=function(e){return t.post(n,e)},e.getAll=function(){return t.get(n).then(function(t){return t.data})},e.getById=function(e){return t.get(n+encodeURIComponent(e)).then(function(t){return t.data})},e.update=function(e){return t.put(n,e)},e["delete"]=function(e){return t["delete"](n+encodeURIComponent(e))},e}]),app.controller("dishesController",["$scope","$location","dishService",function(t,e,n){function o(){n.getAll().then(function(e){t.dishes=e})["catch"](function(t){alert(JSON.stringify(t,null,4))})}t.dishes=[],t.errors={},o(),t["delete"]=function(e){for(var o in t.dishes)if(t.dishes[o]._id===e._id)break;n["delete"](e._id).then(function(){t.dishes.splice(o,1)})["catch"](function(e){t.errors=JSON.stringify(e.data,null,4),alert(t.errors)})},t.create=function(){e.path("/dishes/create")},t.refresh=function(){o()}}]),app.controller("homeController",["$scope",function(t){}]),app.config(["$routeProvider",function(t){t.when("/",{controller:"homeController",templateUrl:"app/home/home.html"})}]),app.controller("navbarController",["$scope","$location","navbarService","$window","Auth","$rootElement",function(t,e,n,o,r,i){function a(){var e=i.attr("ng-app"),r=e+"_buildInfo",a=angular.fromJson(o.sessionStorage.getItem(r));a?t.buildInfo=a:n.getAll().then(function(e){t.buildInfo=e,o.sessionStorage.setItem(r,angular.toJson(e))})["catch"](function(t){alert(JSON.stringify(t,null,4))})}t.menu=[{title:"Contact",link:"/contact"}],t.isCollapsed=!0,t.isLoggedIn=r.isLoggedIn,t.isAdmin=r.isAdmin,t.getCurrentUser=r.getCurrentUser,t.buildInfo={},a(),t.logout=function(){r.logout(),e.path("/login")},t.isActive=function(t){return t===e.path()}}]),app.factory("navbarService",["$http",function(t){var e={},n="/api/buildInfo/";return e.getAll=function(){return t.get(n).then(function(t){return t.data})},e}]),app.controller("page1Controller",["$scope",function(t){}]),app.config(["$routeProvider",function(t){t.when("/page1",{controller:"page1Controller",templateUrl:"app/page1/page1.html"})}]),app.controller("loginController",["$scope","Auth","$location","$window",function(t,e,n,o){t.user={},t.errors={},t.login=function(o){t.submitted=!0,o.$valid&&e.login({email:t.user.email,password:t.user.password}).then(function(){n.path("/")})["catch"](function(e){t.errors.other=e.message})},t.loginOauth=function(t){o.location.href="/auth/"+t}}]),app.controller("settingsController",["$scope","User","Auth",function(t,e,n){t.errors={},t.changePassword=function(e){t.submitted=!0,e.$valid&&n.changePassword(t.user.oldPassword,t.user.newPassword).then(function(){t.message="Parola a fost schimbata cu succes."})["catch"](function(){e.password.$setValidity("mongoose",!1),t.errors.other="Parola incorecta",t.message=""})}}]),app.controller("signupController",["$scope","Auth","$location","$window",function(t,e,n,o){t.user={},t.errors={},t.register=function(o){t.submitted=!0,o.$valid&&e.createUser({name:t.user.name,email:t.user.email,password:t.user.password}).then(function(){n.path("/")})["catch"](function(e){e=e.data,t.errors={},angular.forEach(e.errors,function(e,n){o[n].$setValidity("mongoose",!1),t.errors[n]=e.message})})},t.loginOauth=function(t){o.location.href="/auth/"+t}}]);